<!DOCTYPE html>
<html>
    <head>
        <title>
            Oop
        </title>
        <link rel="icon" href="images\c++1.png">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <LINK rel="stylesheet" href="stylesheet.css">
    </head>
    <body>
        <h1 id="topic" itemprop="name">OOP (Object Oriented Programming) in C++</h1><hr>
        <div id="content">
            <p>Welcome to the new part of programming : <strong>Object Oriented Programming (OOP)</strong>. To understand this, think of a book having a serial number and a number of pages. Now, your science book is a book as is your computer book. Suppose the serial number of Science book is SC12 and that of computer book is CS34 and the number of pages are 200 and 250 respectively. It is like in the picture below:</p>
            <img alt="object and class in C++" src="/staticroot/images/fig2.png" style="max-width:60%;height:auto;">
            <p>So, here, 'book' is a <strong>class</strong> having attributes 'Page' and 'Serial number' and 'Science' and 'Computer' are <strong>objects(instances)</strong> of it.</p>
            <p>So, now you understand that <strong>class</strong> is something which acts like a base, having some definitions. And <strong>objects</strong> are instances of class following those definitions.</p>
            <p>One more example of class and objects you can think of is bank account. Think of 'Account' as a class having attributes 'min_balance' and 'rate_of_interest' and 'Saving' and 'Current' are its objects.</p>
            <img alt="object and class in C++" src="/staticroot/images/fig11.png" style="max-width:60%;height:auto;">
            <p>I hope you have got the feel of classes and objects. We will be dealing with programming parts in later sections.</p>
            <h2>Member Functions</h2>
            <hr>
            <p>You already know what functions are. <strong>Member functions</strong> are functions defined inside a class. For example, there can be a function named 'getStrength' inside 'Student' class to get a total number of students. Here, 'getStrength' is the member function of 'Student' class.</p>
            <h2>Inheritance</h2>
            <hr>
            <p>Many times, we make a <strong>subclass</strong> of a class itself. The class whose subclass has been made is called <strong>superclass</strong>.<br>
            For example, 'Student' class can have 'BTech', 'MTech' and 'Phd' as its subclasses. Here, all three subclasses will have the properties of the parent class as well as some of their new properties.<br>
            Another example can be of 'Book' as superclass and 'ScienceBook' and 'MathsBook' as its subclasses.</p>
            <p>
            All the shown methods and attributes of superclass will be shown by its subclass also. And subclass may have some different attributes in addition to those as well. Other names of <strong>superclass</strong> and <strong>subclass</strong> are <strong>base class</strong> and <strong>derived class</strong> respectively.</p>
            <p class="quote">In this section, you have been introduced to some concepts of programming. In the following sections, you will go through the programming parts.</p>
            <div>
            <a href="structure.htm"><span class="back" style="float:left;font-size:20px;color:black;">Prev</span></a>
            <a href="classesAndObjects.htm"><span style="float:right;font-size:20px;color:black;" class="next">Next</span></a>
            </div>
            </div>
    </body></html>